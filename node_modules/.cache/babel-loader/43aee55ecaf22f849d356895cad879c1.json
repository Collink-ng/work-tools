{"ast":null,"code":"var _jsxFileName = \"/home/orodeji/Documents/Office Work/workTools/src/Content/MainPage/Content.js\";\nimport React, { Component, useState } from 'react';\nimport { Row, Column } from 'simple-flexbox';\nimport { StyleSheet, css } from 'aphrodite';\nimport Card from './Cards/Dashboard/Cards';\nimport SaasCard from './Cards/Sophosaas/SaasCard';\nimport Login from '../Login/Login/Login';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nclass Content extends Component {\n  render() {\n    const {\n      pathname,\n      isSignedin\n    } = this.props;\n    const [isSignIn, setSignIn] = useState(isSignedin);\n    console.log(isSignIn);\n    let pathdets = pathname;\n\n    if (pathdets == 'Login') {\n      return /*#__PURE__*/React.createElement(Login, {\n        isSignedin: isSignedin,\n        onChange: selectedItem => this.setState({\n          selectedItem\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }\n      });\n    } else if (pathdets == 'Sophos as a Service') {\n      return /*#__PURE__*/React.createElement(SaasCard, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      });\n    } else if (pathdets == 'Dashboard') {\n      return /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 12\n        }\n      }, \"Nothing going on here\");\n    }\n  }\n\n}\n\nexport default Content;","map":{"version":3,"sources":["/home/orodeji/Documents/Office Work/workTools/src/Content/MainPage/Content.js"],"names":["React","Component","useState","Row","Column","StyleSheet","css","Card","SaasCard","Login","BrowserRouter","Router","Switch","Route","Link","Content","render","pathname","isSignedin","props","isSignIn","setSignIn","console","log","pathdets","selectedItem","setState"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAAQC,GAAR,EAAaC,MAAb,QAA0B,gBAA1B;AACA,SAASC,UAAT,EAAqBC,GAArB,QAAgC,WAAhC;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,MAAjC,EAAyCC,KAAzC,EAAgDC,IAAhD,QAA2D,kBAA3D;;AAGA,MAAMC,OAAN,SAAsBd,SAAtB,CAAgC;AAC5Be,EAAAA,MAAM,GAAE;AACR,UAAM;AAACC,MAAAA,QAAD;AAAWC,MAAAA;AAAX,QAA0B,KAAKC,KAArC;AACA,UAAM,CAACC,QAAD,EAAWC,SAAX,IAAwBnB,QAAQ,CAACgB,UAAD,CAAtC;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,QAAII,QAAQ,GAAGP,QAAf;;AACA,QAAIO,QAAQ,IAAI,OAAhB,EAAwB;AACpB,0BACI,oBAAC,KAAD;AAAO,QAAA,UAAU,EAAEN,UAAnB;AAA+B,QAAA,QAAQ,EAAGO,YAAD,IAAkB,KAAKC,QAAL,CAAc;AAAED,UAAAA;AAAF,SAAd,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGJ,KAJA,MAKK,IAAID,QAAQ,IAAI,qBAAhB,EAAsC;AACvC,0BACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGJ,KAJK,MAIE,IAAIA,QAAQ,IAAG,WAAf,EAA4B;AACnC,0BACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KAJU,MAIL;AACC,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ;AAGH;AACC;;AAxB2B;;AA2BhC,eAAeT,OAAf","sourcesContent":["import React,{Component, useState} from 'react';\nimport {Row, Column} from 'simple-flexbox';\nimport { StyleSheet, css } from 'aphrodite';\nimport Card from './Cards/Dashboard/Cards';\nimport SaasCard from './Cards/Sophosaas/SaasCard';\nimport Login from '../Login/Login/Login';\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\n\n\nclass Content extends Component {\n    render(){\n    const {pathname, isSignedin } = this.props;\n    const [isSignIn, setSignIn] = useState(isSignedin)\n    console.log(isSignIn)\n    let pathdets = pathname\n    if (pathdets == 'Login'){\n        return (\n            <Login isSignedin={isSignedin} onChange={(selectedItem) => this.setState({ selectedItem })} />\n        )\n   }\n    else if (pathdets == 'Sophos as a Service'){\n        return(\n            <SaasCard/>\n        )\n   } else  if (pathdets =='Dashboard') {\n    return (\n        <Card/>\n    )\n} else{\n       return(\n           <h1>Nothing going on here</h1>\n       )\n   }\n    }\n}\n\nexport default Content;"]},"metadata":{},"sourceType":"module"}