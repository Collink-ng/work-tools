{"ast":null,"code":"var _jsxFileName = \"/home/orodeji/Documents/Office Work/workTools/src/Content/MainPage/CreateSubscriber/CreateSubscriber.1.js\";\nimport React, { useState } from 'react';\nimport './CreateSubscriber.css';\nimport axios from 'axios';\nimport Modal from 'react-bootstrap/Modal';\nimport ModalDialog from 'react-bootstrap/ModalDialog';\nimport ModalHeader from 'react-bootstrap/ModalHeader';\nimport ModalTitle from 'react-bootstrap/ModalTitle';\nimport ModalBody from 'react-bootstrap/ModalBody';\nimport ModalFooter from 'react-bootstrap/ModalFooter';\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport SaasCard from '../../MainPage/Cards/Sophosaas/SaasCard';\nimport { css } from \"@emotion/core\";\nimport RingLoader from \"react-spinners/HashLoader\";\n\nfunction MyVerticallyCenteredModal(props) {\n  const override = css`\n  position:fixed;\n  margin-left:12%;\n}\n`;\n  return /*#__PURE__*/React.createElement(Modal, {\n    show: true,\n    backdrop: false,\n    centered: true,\n    className: \"my-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RingLoader, {\n    css: override,\n    size: 120,\n    color: \"#3678D7\",\n    loading: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  })));\n}\n\nconst CreateSubscriber = props => {\n  const {\n    auth_token\n  } = props;\n  const [modalShow, setModalShow] = React.useState(false);\n  const [subscriberName, setsubscriberName] = useState(\"\");\n  const [vlanID, setvlanID] = useState(\"\");\n  const [lanIpAddress, setlanIpAddress] = useState(\"\");\n  const [lanSubnetAddress, setlanSubnetAddress] = useState(\"\");\n  const [wanIpAddress, setwanIpAddress] = useState(\"\");\n  const [wanSubnetAddress, setwanSubnetAddress] = useState(\"\");\n  const [wanGatewayAddress, setwanGatewayAddress] = useState(\"\");\n  const [hasLoaded, sethasLoaded] = useState(\"loading\");\n  const [apiResponse, setapiResponse] = useState(\"\");\n\n  function validateForm() {\n    return subscriberName.length > 0 && lanIpAddress.length > 0;\n  }\n\n  async function apiRequest() {\n    axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n    axios({\n      method: 'POST',\n      url: 'http://127.0.0.1:8000/token',\n      data: {\n        name: subscriberName,\n        lanIP: lanIpAddress,\n        lanSubnet: lanSubnetAddress,\n        wanIP: wanIpAddress,\n        wanSubnet: wanSubnetAddress,\n        wanGateway: wanGatewayAddress,\n        vlan_ID: vlanID\n      },\n      headers: {\n        Bearer: auth_token\n      }\n    }).then(function (response) {\n      if (response.status === 200) {\n        setapiResponse(response.data['message']);\n        sethasLoaded('loaded');\n      } else {\n        sethasLoaded('loadingError');\n      }\n    });\n  }\n\n  function handleSubmit(event) {\n    sethasLoaded(\"loading\");\n    apiRequest();\n    event.preventDefault();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contentpage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, hasLoaded === 'loading' ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MyVerticallyCenteredModal, {\n    show: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  })) : hasLoaded === 'loaded' ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SaasCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    show: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, \"Sucess\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"Woohoo, you're reading this text in a modal!\"))) : /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"f3 fw6 ph0 mh0 pt4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, \"Create Subscriber\"), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"subscriberName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 19\n    }\n  }, \"Subscriber Name\"), /*#__PURE__*/React.createElement(FormControl, {\n    autoFocus: true,\n    type: \"text\",\n    value: subscriberName,\n    onChange: e => setsubscriberName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"vlanID\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 19\n    }\n  }, \"VLAN ID\"), /*#__PURE__*/React.createElement(FormControl, {\n    value: vlanID,\n    onChange: e => setvlanID(e.target.value),\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"lanIPAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 19\n    }\n  }, \"LAN IP Address\"), /*#__PURE__*/React.createElement(FormControl, {\n    value: lanIpAddress,\n    onChange: e => setlanIpAddress(e.target.value),\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"lanSubnetAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 19\n    }\n  }, \"LAN Subnet Address\"), /*#__PURE__*/React.createElement(FormControl, {\n    value: lanSubnetAddress,\n    onChange: e => setlanSubnetAddress(e.target.value),\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"wanIpAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 19\n    }\n  }, \"WAN IP Address\"), /*#__PURE__*/React.createElement(FormControl, {\n    value: wanIpAddress,\n    onChange: e => setwanIpAddress(e.target.value),\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"wanSubnetAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 19\n    }\n  }, \"WAN Subnet Address\"), /*#__PURE__*/React.createElement(FormControl, {\n    value: wanSubnetAddress,\n    onChange: e => setwanSubnetAddress(e.target.value),\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"wanGatewayAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }\n  }, \"WAN Gateway Address\"), /*#__PURE__*/React.createElement(FormControl, {\n    value: wanGatewayAddress,\n    onChange: e => setwanGatewayAddress(e.target.value),\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    disabled: !validateForm(),\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, \"Create Subscriber\")));\n};\n\nexport default CreateSubscriber;","map":{"version":3,"sources":["/home/orodeji/Documents/Office Work/workTools/src/Content/MainPage/CreateSubscriber/CreateSubscriber.1.js"],"names":["React","useState","axios","Modal","ModalDialog","ModalHeader","ModalTitle","ModalBody","ModalFooter","Button","FormGroup","FormControl","FormLabel","SaasCard","css","RingLoader","MyVerticallyCenteredModal","props","override","CreateSubscriber","auth_token","modalShow","setModalShow","subscriberName","setsubscriberName","vlanID","setvlanID","lanIpAddress","setlanIpAddress","lanSubnetAddress","setlanSubnetAddress","wanIpAddress","setwanIpAddress","wanSubnetAddress","setwanSubnetAddress","wanGatewayAddress","setwanGatewayAddress","hasLoaded","sethasLoaded","apiResponse","setapiResponse","validateForm","length","apiRequest","defaults","headers","post","method","url","data","name","lanIP","lanSubnet","wanIP","wanSubnet","wanGateway","vlan_ID","Bearer","then","response","status","handleSubmit","event","preventDefault","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './CreateSubscriber.css';\nimport axios from 'axios';\nimport Modal from 'react-bootstrap/Modal';\nimport ModalDialog from 'react-bootstrap/ModalDialog';\nimport ModalHeader from 'react-bootstrap/ModalHeader';\nimport ModalTitle from 'react-bootstrap/ModalTitle';\nimport ModalBody from 'react-bootstrap/ModalBody'\nimport ModalFooter from 'react-bootstrap/ModalFooter';\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport SaasCard from '../../MainPage/Cards/Sophosaas/SaasCard';\nimport { css } from \"@emotion/core\";\nimport RingLoader from \"react-spinners/HashLoader\";\n\nfunction MyVerticallyCenteredModal(props) {\n\n  const override = css`\n  position:fixed;\n  margin-left:12%;\n}\n`;\n  return (\n      <Modal show={true}\n        backdrop={false}\n        centered\n        className='my-modal'\n      >\n          <Modal.Header>\n            <RingLoader\n              css={override}\n              size={120}\n              color={\"#3678D7\"}\n              loading={true}\n            />\n          </Modal.Header>\n        </Modal>         \n  );\n}\n\nconst CreateSubscriber = (props) => {\n    const {auth_token} =props;\n    const [modalShow, setModalShow] = React.useState(false);\n    const [subscriberName, setsubscriberName] = useState(\"\");\n    const [vlanID, setvlanID] = useState(\"\");\n    const [lanIpAddress, setlanIpAddress] = useState(\"\");\n    const [lanSubnetAddress, setlanSubnetAddress] = useState(\"\");\n    const [wanIpAddress, setwanIpAddress] = useState(\"\");\n    const [wanSubnetAddress, setwanSubnetAddress] = useState(\"\");\n    const [wanGatewayAddress, setwanGatewayAddress] = useState(\"\");\n    const [hasLoaded, sethasLoaded] = useState(\"loading\");\n    const [apiResponse, setapiResponse] = useState(\"\")\n\n    function validateForm() {\n        return subscriberName.length > 0 && lanIpAddress.length > 0;\n      }\n\n    async function apiRequest(){\n       axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n        axios({\n            method: 'POST',\n            url:'http://127.0.0.1:8000/token',\n            data:{\n                name: subscriberName,\n                lanIP: lanIpAddress,\n                lanSubnet: lanSubnetAddress,\n                wanIP: wanIpAddress,\n                wanSubnet: wanSubnetAddress,\n                wanGateway: wanGatewayAddress,\n                vlan_ID: vlanID\n            },\n            headers:{\n              Bearer: auth_token\n            }\n        }) .then(function(response){\n            if (response.status === 200){\n                setapiResponse(response.data['message']);\n                sethasLoaded('loaded')\n            } else {\n                sethasLoaded('loadingError')\n            }\n        })\n    }\n\n    function handleSubmit(event) {\n      sethasLoaded(\"loading\");\n      apiRequest();\n      event.preventDefault();\n    }\n\n    return (\n        <div className='contentpage'>\n          {\n            hasLoaded === 'loading' ?\n            <div>\n          <MyVerticallyCenteredModal\n            show={true}\n          />\n          </div>\n          : hasLoaded === 'loaded' ?\n          <div>\n            <SaasCard/>\n            <Modal show={true}>\n            <Modal.Header closeButton>\n              <Modal.Title>Sucess</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n          </Modal>\n          </div>\n          :<form onSubmit={handleSubmit}>\n              <p className=\"f3 fw6 ph0 mh0 pt4\">Create Subscriber</p>\n                <FormGroup controlId=\"subscriberName\">\n                  <FormLabel>Subscriber Name</FormLabel>\n                  <FormControl\n                    autoFocus\n                    type=\"text\"\n                    value={subscriberName}\n                    onChange={e => setsubscriberName(e.target.value)}\n                  />\n                </FormGroup>\n                <FormGroup controlId=\"vlanID\">\n                  <FormLabel>VLAN ID</FormLabel>\n                  <FormControl\n                    value={vlanID}\n                    onChange={e => setvlanID(e.target.value)}\n                    type=\"number\"\n                  />\n                </FormGroup>\n                <FormGroup controlId=\"lanIPAddress\">\n                  <FormLabel>LAN IP Address</FormLabel>\n                  <FormControl\n                    value={lanIpAddress}\n                    onChange={e => setlanIpAddress(e.target.value)}\n                    type=\"text\"\n                  />\n                </FormGroup>\n                <FormGroup controlId=\"lanSubnetAddress\">\n                  <FormLabel>LAN Subnet Address</FormLabel>\n                  <FormControl\n                    value={lanSubnetAddress}\n                    onChange={e => setlanSubnetAddress(e.target.value)}\n                    type=\"text\"\n                  />\n                </FormGroup>\n                <FormGroup controlId=\"wanIpAddress\">\n                  <FormLabel>WAN IP Address</FormLabel>\n                  <FormControl\n                    value={wanIpAddress}\n                    onChange={e => setwanIpAddress(e.target.value)}\n                    type=\"text\"\n                  />\n                </FormGroup>\n                <FormGroup controlId=\"wanSubnetAddress\">\n                  <FormLabel>WAN Subnet Address</FormLabel>\n                  <FormControl\n                    value={wanSubnetAddress}\n                    onChange={e => setwanSubnetAddress(e.target.value)}\n                    type=\"text\"\n                  />\n                </FormGroup>\n                <FormGroup controlId=\"wanGatewayAddress\">\n                  <FormLabel>WAN Gateway Address</FormLabel>\n                  <FormControl\n                    value={wanGatewayAddress}\n                    onChange={e => setwanGatewayAddress(e.target.value)}\n                    type=\"text\"\n                  />\n                </FormGroup>\n                <Button block disabled={!validateForm()} type=\"submit\">\n                  Create Subscriber\n                </Button>\n           </form>\n          }\n            \n        </div>\n    );\n};\nexport default CreateSubscriber;\n"]},"metadata":{},"sourceType":"module"}