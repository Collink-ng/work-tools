{"ast":null,"code":"var _jsxFileName = \"/home/orodeji/Documents/Office Work/workTools/src/Content/MainPage/CreateSubscriber/CreateSubscriber.1.js\";\nimport React, { useState } from 'react';\nimport './CreateSubscriber.css';\nimport axios from 'axios';\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport { css } from \"@emotion/core\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst CreateSubscriber = () => {\n  const [subscriberName, setsubscriberName] = useState(\"\");\n  const [vlanID, setvlanID] = useState(\"\");\n  const [lanIpAddress, setlanIpAddress] = useState(\"\");\n  const [lanSubnetAddress, setlanSubnetAddress] = useState(\"\");\n  const [wanIpAddress, setwanIpAddress] = useState(\"\");\n  const [wanSubnetAddress, setwanSubnetAddress] = useState(\"\");\n  const [wanGatewayAddress, setwanGatewayAddress] = useState(\"\");\n  const [hasLoaded, sethasLoaded] = useState(\"\");\n\n  function validateForm() {\n    return subscriberName.length > 0 && lanIpAddress.length > 0;\n  }\n\n  function apiRequest() {// axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n    // axios({\n    //     method: 'POST',\n    //     url:'http://127.0.0.1:8000/token',\n    //     data:{\n    //         name: subscriberName,\n    //     }\n    // }) .then(function(response){\n    //     if (response.status === 200){\n    //     } else {\n    //     }\n    // })\n  }\n\n  function handleSubmit(event) {\n    sethasLoaded(\"loading\");\n    console;\n    event.preventDefault();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contentpage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"f3 fw6 ph0 mh0 pt4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Create Subscriber\"), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"subscriberName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, \"Subscriber Name\"), /*#__PURE__*/React.createElement(FormControl, {\n    autoFocus: true,\n    type: \"text\",\n    value: subscriberName,\n    onChange: e => setsubscriberName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"vlanID\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, \"VLAN ID\"), /*#__PURE__*/React.createElement(FormControl, {\n    value: vlanID,\n    onChange: e => setvlanID(e.target.value),\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"lanIPAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, \"LAN IP Address\"), /*#__PURE__*/React.createElement(FormControl, {\n    value: lanIpAddress,\n    onChange: e => setlanIpAddress(e.target.value),\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"lanSubnetAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, \"LAN Subnet Address\"), /*#__PURE__*/React.createElement(FormControl, {\n    value: lanSubnetAddress,\n    onChange: e => setlanSubnetAddress(e.target.value),\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"wanIpAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, \"WAN IP Address\"), /*#__PURE__*/React.createElement(FormControl, {\n    value: wanIpAddress,\n    onChange: e => setwanIpAddress(e.target.value),\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"wanSubnetAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, \"WAN Subnet Address\"), /*#__PURE__*/React.createElement(FormControl, {\n    value: wanSubnetAddress,\n    onChange: e => setwanSubnetAddress(e.target.value),\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"wanGatewayAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, \"WAN Gateway Address\"), /*#__PURE__*/React.createElement(FormControl, {\n    value: wanGatewayAddress,\n    onChange: e => setwanGatewayAddress(e.target.value),\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    disabled: !validateForm(),\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Login\")));\n};\n\nexport default CreateSubscriber;","map":{"version":3,"sources":["/home/orodeji/Documents/Office Work/workTools/src/Content/MainPage/CreateSubscriber/CreateSubscriber.1.js"],"names":["React","useState","axios","Button","FormGroup","FormControl","FormLabel","css","ClipLoader","CreateSubscriber","subscriberName","setsubscriberName","vlanID","setvlanID","lanIpAddress","setlanIpAddress","lanSubnetAddress","setlanSubnetAddress","wanIpAddress","setwanIpAddress","wanSubnetAddress","setwanSubnetAddress","wanGatewayAddress","setwanGatewayAddress","hasLoaded","sethasLoaded","validateForm","length","apiRequest","handleSubmit","event","console","preventDefault","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './CreateSubscriber.css';\nimport axios from 'axios';\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport { css } from \"@emotion/core\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst CreateSubscriber = () => {\n    const [subscriberName, setsubscriberName] = useState(\"\");\n    const [vlanID, setvlanID] = useState(\"\");\n    const [lanIpAddress, setlanIpAddress] = useState(\"\");\n    const [lanSubnetAddress, setlanSubnetAddress] = useState(\"\");\n    const [wanIpAddress, setwanIpAddress] = useState(\"\");\n    const [wanSubnetAddress, setwanSubnetAddress] = useState(\"\");\n    const [wanGatewayAddress, setwanGatewayAddress] = useState(\"\");\n    const [hasLoaded, sethasLoaded] = useState(\"\")\n\n    function validateForm() {\n        return subscriberName.length > 0 && lanIpAddress.length > 0;\n      }\n\n    function apiRequest(){\n       // axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n\n        // axios({\n        //     method: 'POST',\n        //     url:'http://127.0.0.1:8000/token',\n        //     data:{\n        //         name: subscriberName,\n\n        //     }\n        // }) .then(function(response){\n        //     if (response.status === 200){\n              \n        //     } else {\n                \n        //     }\n        // })\n    }\n\n    function handleSubmit(event) {\n      sethasLoaded(\"loading\")\n      console\n      event.preventDefault();\n    }\n\n\n\n    return (\n        <div className='contentpage'>\n            <form onSubmit={handleSubmit}>\n            <p className=\"f3 fw6 ph0 mh0 pt4\">Create Subscriber</p>\n            <FormGroup controlId=\"subscriberName\">\n              <FormLabel>Subscriber Name</FormLabel>\n              <FormControl\n                autoFocus\n                type=\"text\"\n                value={subscriberName}\n                onChange={e => setsubscriberName(e.target.value)}\n              />\n            </FormGroup>\n            <FormGroup controlId=\"vlanID\">\n              <FormLabel>VLAN ID</FormLabel>\n              <FormControl\n                value={vlanID}\n                onChange={e => setvlanID(e.target.value)}\n                type=\"number\"\n              />\n            </FormGroup>\n            <FormGroup controlId=\"lanIPAddress\">\n              <FormLabel>LAN IP Address</FormLabel>\n              <FormControl\n                value={lanIpAddress}\n                onChange={e => setlanIpAddress(e.target.value)}\n                type=\"text\"\n              />\n            </FormGroup>\n            <FormGroup controlId=\"lanSubnetAddress\">\n              <FormLabel>LAN Subnet Address</FormLabel>\n              <FormControl\n                value={lanSubnetAddress}\n                onChange={e => setlanSubnetAddress(e.target.value)}\n                type=\"text\"\n              />\n            </FormGroup>\n            <FormGroup controlId=\"wanIpAddress\">\n              <FormLabel>WAN IP Address</FormLabel>\n              <FormControl\n                value={wanIpAddress}\n                onChange={e => setwanIpAddress(e.target.value)}\n                type=\"text\"\n              />\n            </FormGroup>\n            <FormGroup controlId=\"wanSubnetAddress\">\n              <FormLabel>WAN Subnet Address</FormLabel>\n              <FormControl\n                value={wanSubnetAddress}\n                onChange={e => setwanSubnetAddress(e.target.value)}\n                type=\"text\"\n              />\n            </FormGroup>\n            <FormGroup controlId=\"wanGatewayAddress\">\n              <FormLabel>WAN Gateway Address</FormLabel>\n              <FormControl\n                value={wanGatewayAddress}\n                onChange={e => setwanGatewayAddress(e.target.value)}\n                type=\"text\"\n              />\n            </FormGroup>\n            <Button block disabled={!validateForm()} type=\"submit\">\n              Login\n            </Button>\n          </form>\n        </div>\n    );\n};\nexport default CreateSubscriber;\n"]},"metadata":{},"sourceType":"module"}