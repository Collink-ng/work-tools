{"ast":null,"code":"var _jsxFileName = \"/home/orodeji/Documents/Office Work/workTools/src/Content/MainPage/CreateSubscriber/CreateSubscriber.1.js\";\nimport React, { useState } from 'react';\nimport './CreateSubscriber.css';\nimport axios from 'axios';\nimport Modal from 'react-bootstrap/Modal';\nimport ModalDialog from 'react-bootstrap/ModalDialog';\nimport ModalHeader from 'react-bootstrap/ModalHeader';\nimport ModalTitle from 'react-bootstrap/ModalTitle';\nimport ModalBody from 'react-bootstrap/ModalBody';\nimport ModalFooter from 'react-bootstrap/ModalFooter';\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport { css } from \"@emotion/core\";\nimport RingLoader from \"react-spinners/ClipLoader\";\n\nfunction MyVerticallyCenteredModal(props) {\n  const override = css`\n  margin-left:40%\n`;\n  const modalcss = css`\n    background-coloor: #F7F8FC;\n  `;\n  return /*#__PURE__*/React.createElement(Modal, Object.assign({}, props, {\n    backdrop: false,\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Modal.Body, {\n    className: \"modalcss\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RingLoader, {\n    css: override,\n    size: 150,\n    color: \"#3678D7\",\n    loading: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  })));\n}\n\nconst CreateSubscriber = props => {\n  const {\n    auth_token\n  } = props;\n  const [modalShow, setModalShow] = React.useState(false);\n  const [subscriberName, setsubscriberName] = useState(\"\");\n  const [vlanID, setvlanID] = useState(\"\");\n  const [lanIpAddress, setlanIpAddress] = useState(\"\");\n  const [lanSubnetAddress, setlanSubnetAddress] = useState(\"\");\n  const [wanIpAddress, setwanIpAddress] = useState(\"\");\n  const [wanSubnetAddress, setwanSubnetAddress] = useState(\"\");\n  const [wanGatewayAddress, setwanGatewayAddress] = useState(\"\");\n  const [hasLoaded, sethasLoaded] = useState(\"loading\");\n\n  function validateForm() {\n    return subscriberName.length > 0 && lanIpAddress.length > 0;\n  }\n\n  function apiRequest() {\n    axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n    axios({\n      method: 'POST',\n      url: 'http://127.0.0.1:8000/token',\n      data: {\n        name: subscriberName,\n        lanIP: lanIpAddress,\n        lanSubnet: lanSubnetAddress,\n        wanIP: wanIpAddress,\n        wanSubnet: wanSubnetAddress,\n        wanGateway: wanGatewayAddress,\n        vlan_ID: vlanID\n      },\n      headers: {\n        Bearer: auth_token\n      }\n    }).then(function (response) {\n      if (response.status === 200) {} else {}\n    });\n  }\n\n  function handleSubmit(event) {\n    sethasLoaded(\"loading\"); // apiRequest();\n\n    event.preventDefault();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contentpage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, hasLoaded === 'loading' ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MyVerticallyCenteredModal, {\n    show: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"f3 fw6 ph0 mh0 pt4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, \"Create Subscriber\"), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"subscriberName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }\n  }, \"Subscriber Name\"), /*#__PURE__*/React.createElement(FormControl, {\n    autoFocus: true,\n    type: \"text\",\n    value: subscriberName,\n    onChange: e => setsubscriberName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"vlanID\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  }, \"VLAN ID\"), /*#__PURE__*/React.createElement(FormControl, {\n    value: vlanID,\n    onChange: e => setvlanID(e.target.value),\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"lanIPAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 19\n    }\n  }, \"LAN IP Address\"), /*#__PURE__*/React.createElement(FormControl, {\n    value: lanIpAddress,\n    onChange: e => setlanIpAddress(e.target.value),\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"lanSubnetAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }, \"LAN Subnet Address\"), /*#__PURE__*/React.createElement(FormControl, {\n    value: lanSubnetAddress,\n    onChange: e => setlanSubnetAddress(e.target.value),\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"wanIpAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 19\n    }\n  }, \"WAN IP Address\"), /*#__PURE__*/React.createElement(FormControl, {\n    value: wanIpAddress,\n    onChange: e => setwanIpAddress(e.target.value),\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"wanSubnetAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 19\n    }\n  }, \"WAN Subnet Address\"), /*#__PURE__*/React.createElement(FormControl, {\n    value: wanSubnetAddress,\n    onChange: e => setwanSubnetAddress(e.target.value),\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"wanGatewayAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 19\n    }\n  }, \"WAN Gateway Address\"), /*#__PURE__*/React.createElement(FormControl, {\n    value: wanGatewayAddress,\n    onChange: e => setwanGatewayAddress(e.target.value),\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    disabled: !validateForm(),\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, \"Create Subscriber\")));\n};\n\nexport default CreateSubscriber;","map":{"version":3,"sources":["/home/orodeji/Documents/Office Work/workTools/src/Content/MainPage/CreateSubscriber/CreateSubscriber.1.js"],"names":["React","useState","axios","Modal","ModalDialog","ModalHeader","ModalTitle","ModalBody","ModalFooter","Button","FormGroup","FormControl","FormLabel","css","RingLoader","MyVerticallyCenteredModal","props","override","modalcss","CreateSubscriber","auth_token","modalShow","setModalShow","subscriberName","setsubscriberName","vlanID","setvlanID","lanIpAddress","setlanIpAddress","lanSubnetAddress","setlanSubnetAddress","wanIpAddress","setwanIpAddress","wanSubnetAddress","setwanSubnetAddress","wanGatewayAddress","setwanGatewayAddress","hasLoaded","sethasLoaded","validateForm","length","apiRequest","defaults","headers","post","method","url","data","name","lanIP","lanSubnet","wanIP","wanSubnet","wanGateway","vlan_ID","Bearer","then","response","status","handleSubmit","event","preventDefault","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './CreateSubscriber.css';\nimport axios from 'axios';\nimport Modal from 'react-bootstrap/Modal';\nimport ModalDialog from 'react-bootstrap/ModalDialog';\nimport ModalHeader from 'react-bootstrap/ModalHeader';\nimport ModalTitle from 'react-bootstrap/ModalTitle';\nimport ModalBody from 'react-bootstrap/ModalBody'\nimport ModalFooter from 'react-bootstrap/ModalFooter';\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport { css } from \"@emotion/core\";\nimport RingLoader from \"react-spinners/ClipLoader\";\n\nfunction MyVerticallyCenteredModal(props) {\n\n  const override = css`\n  margin-left:40%\n`;\n  const modalcss = css`\n    background-coloor: #F7F8FC;\n  `;\n\n  return (\n    <Modal\n      {...props}\n      backdrop={false}\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      \n      <Modal.Body className=\"modalcss\">\n          <RingLoader\n            css={override}\n            size={150}\n            color={\"#3678D7\"}\n            loading={true}\n          />\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nconst CreateSubscriber = (props) => {\n    const {auth_token} =props;\n    const [modalShow, setModalShow] = React.useState(false);\n    const [subscriberName, setsubscriberName] = useState(\"\");\n    const [vlanID, setvlanID] = useState(\"\");\n    const [lanIpAddress, setlanIpAddress] = useState(\"\");\n    const [lanSubnetAddress, setlanSubnetAddress] = useState(\"\");\n    const [wanIpAddress, setwanIpAddress] = useState(\"\");\n    const [wanSubnetAddress, setwanSubnetAddress] = useState(\"\");\n    const [wanGatewayAddress, setwanGatewayAddress] = useState(\"\");\n    const [hasLoaded, sethasLoaded] = useState(\"loading\");\n\n  \n    function validateForm() {\n        return subscriberName.length > 0 && lanIpAddress.length > 0;\n      }\n\n    function apiRequest(){\n       axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n        axios({\n            method: 'POST',\n            url:'http://127.0.0.1:8000/token',\n            data:{\n                name: subscriberName,\n                lanIP: lanIpAddress,\n                lanSubnet: lanSubnetAddress,\n                wanIP: wanIpAddress,\n                wanSubnet: wanSubnetAddress,\n                wanGateway: wanGatewayAddress,\n                vlan_ID: vlanID\n\n            },\n            headers:{\n              Bearer: auth_token\n            }\n        }) .then(function(response){\n            if (response.status === 200){\n              \n            } else {\n                \n            }\n        })\n    }\n\n    function handleSubmit(event) {\n      sethasLoaded(\"loading\");\n      // apiRequest();\n\n      event.preventDefault();\n    }\n\n\n\n    return (\n        <div className='contentpage'>\n          {\n            hasLoaded === 'loading' ?\n            <div>\n          <MyVerticallyCenteredModal\n            show={true}\n          />\n           \n          </div>\n          :<form onSubmit={handleSubmit}>\n              <p className=\"f3 fw6 ph0 mh0 pt4\">Create Subscriber</p>\n                <FormGroup controlId=\"subscriberName\">\n                  <FormLabel>Subscriber Name</FormLabel>\n                  <FormControl\n                    autoFocus\n                    type=\"text\"\n                    value={subscriberName}\n                    onChange={e => setsubscriberName(e.target.value)}\n                  />\n                </FormGroup>\n                <FormGroup controlId=\"vlanID\">\n                  <FormLabel>VLAN ID</FormLabel>\n                  <FormControl\n                    value={vlanID}\n                    onChange={e => setvlanID(e.target.value)}\n                    type=\"number\"\n                  />\n                </FormGroup>\n                <FormGroup controlId=\"lanIPAddress\">\n                  <FormLabel>LAN IP Address</FormLabel>\n                  <FormControl\n                    value={lanIpAddress}\n                    onChange={e => setlanIpAddress(e.target.value)}\n                    type=\"text\"\n                  />\n                </FormGroup>\n                <FormGroup controlId=\"lanSubnetAddress\">\n                  <FormLabel>LAN Subnet Address</FormLabel>\n                  <FormControl\n                    value={lanSubnetAddress}\n                    onChange={e => setlanSubnetAddress(e.target.value)}\n                    type=\"text\"\n                  />\n                </FormGroup>\n                <FormGroup controlId=\"wanIpAddress\">\n                  <FormLabel>WAN IP Address</FormLabel>\n                  <FormControl\n                    value={wanIpAddress}\n                    onChange={e => setwanIpAddress(e.target.value)}\n                    type=\"text\"\n                  />\n                </FormGroup>\n                <FormGroup controlId=\"wanSubnetAddress\">\n                  <FormLabel>WAN Subnet Address</FormLabel>\n                  <FormControl\n                    value={wanSubnetAddress}\n                    onChange={e => setwanSubnetAddress(e.target.value)}\n                    type=\"text\"\n                  />\n                </FormGroup>\n                <FormGroup controlId=\"wanGatewayAddress\">\n                  <FormLabel>WAN Gateway Address</FormLabel>\n                  <FormControl\n                    value={wanGatewayAddress}\n                    onChange={e => setwanGatewayAddress(e.target.value)}\n                    type=\"text\"\n                  />\n                </FormGroup>\n                <Button block disabled={!validateForm()} type=\"submit\">\n                  Create Subscriber\n                </Button>\n           </form>\n          }\n            \n        </div>\n    );\n};\nexport default CreateSubscriber;\n"]},"metadata":{},"sourceType":"module"}