{"ast":null,"code":"var _jsxFileName = \"/home/orodeji/Documents/Office Work/workTools/src/Content/MainPage/CreateSubscriber/CreateSubscriber.1.js\";\nimport React, { useState } from 'react';\nimport './CreateSubscriber.css';\nimport axios from 'axios';\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport { css } from \"@emotion/core\";\nimport RingLoader from \"react-spinners/ClipLoader\";\n\nconst CreateSubscriber = props => {\n  const {\n    auth_token\n  } = props;\n  const [vlanID, setvlanID] = useState(\"\");\n  const [lanIpAddress, setlanIpAddress] = useState(\"\");\n  const [lanSubnetAddress, setlanSubnetAddress] = useState(\"\");\n  const [wanIpAddress, setwanIpAddress] = useState(\"\");\n  const [wanSubnetAddress, setwanSubnetAddress] = useState(\"\");\n  const [wanGatewayAddress, setwanGatewayAddress] = useState(\"\");\n  const [hasLoaded, sethasLoaded] = useState(\"\");\n  const override = css`\n      margin-top:30%;\n      margin-left:60%\n    `;\n\n  function validateForm() {\n    return subscriberName.length > 0 && lanIpAddress.length > 0;\n  }\n\n  function apiRequest() {\n    axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n    axios({\n      method: 'POST',\n      url: 'http://127.0.0.1:8000/token',\n      data: {\n        name: subscriberName,\n        lanIP: lanIpAddress,\n        lanSubnet: lanSubnetAddress,\n        wanIP: wanIpAddress,\n        wanSubnet: wanSubnetAddress,\n        wanGateway: wanGatewayAddress,\n        vlan_ID: vlanID\n      },\n      headers: {\n        Bearer: auth_token\n      }\n    }).then(function (response) {\n      if (response.status === 200) {} else {}\n    });\n  }\n\n  function handleSubmit(event) {\n    sethasLoaded(\"loading\");\n    event.preventDefault();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contentpage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, hasLoaded === 'loading' ? /*#__PURE__*/React.createElement(RingLoader, {\n    css: override,\n    size: 150,\n    color: \"#3678D7\",\n    loading: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"f3 fw6 ph0 mh0 pt4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, \"Create Subscriber\"), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"subscriberName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }, \"Subscriber Name\"), /*#__PURE__*/React.createElement(FormControl, {\n    autoFocus: true,\n    type: \"text\",\n    value: subscriberName,\n    onChange: e => setsubscriberName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"vlanID\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  }, \"VLAN ID\"), /*#__PURE__*/React.createElement(FormControl, {\n    value: vlanID,\n    onChange: e => setvlanID(e.target.value),\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"lanIPAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }, \"LAN IP Address\"), /*#__PURE__*/React.createElement(FormControl, {\n    value: lanIpAddress,\n    onChange: e => setlanIpAddress(e.target.value),\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"lanSubnetAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }, \"LAN Subnet Address\"), /*#__PURE__*/React.createElement(FormControl, {\n    value: lanSubnetAddress,\n    onChange: e => setlanSubnetAddress(e.target.value),\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"wanIpAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }\n  }, \"WAN IP Address\"), /*#__PURE__*/React.createElement(FormControl, {\n    value: wanIpAddress,\n    onChange: e => setwanIpAddress(e.target.value),\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"wanSubnetAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  }, \"WAN Subnet Address\"), /*#__PURE__*/React.createElement(FormControl, {\n    value: wanSubnetAddress,\n    onChange: e => setwanSubnetAddress(e.target.value),\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"wanGatewayAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 19\n    }\n  }, \"WAN Gateway Address\"), /*#__PURE__*/React.createElement(FormControl, {\n    value: wanGatewayAddress,\n    onChange: e => setwanGatewayAddress(e.target.value),\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    disabled: !validateForm(),\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, \"Create Subscriber\")));\n};\n\nexport default CreateSubscriber;","map":{"version":3,"sources":["/home/orodeji/Documents/Office Work/workTools/src/Content/MainPage/CreateSubscriber/CreateSubscriber.1.js"],"names":["React","useState","axios","Button","FormGroup","FormControl","FormLabel","css","RingLoader","CreateSubscriber","props","auth_token","vlanID","setvlanID","lanIpAddress","setlanIpAddress","lanSubnetAddress","setlanSubnetAddress","wanIpAddress","setwanIpAddress","wanSubnetAddress","setwanSubnetAddress","wanGatewayAddress","setwanGatewayAddress","hasLoaded","sethasLoaded","override","validateForm","subscriberName","length","apiRequest","defaults","headers","post","method","url","data","name","lanIP","lanSubnet","wanIP","wanSubnet","wanGateway","vlan_ID","Bearer","then","response","status","handleSubmit","event","preventDefault","e","setsubscriberName","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './CreateSubscriber.css';\nimport axios from 'axios';\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport { css } from \"@emotion/core\";\nimport RingLoader from \"react-spinners/ClipLoader\";\n\nconst CreateSubscriber = (props) => {\n    const {auth_token} =props;\n    \n    const [vlanID, setvlanID] = useState(\"\");\n    const [lanIpAddress, setlanIpAddress] = useState(\"\");\n    const [lanSubnetAddress, setlanSubnetAddress] = useState(\"\");\n    const [wanIpAddress, setwanIpAddress] = useState(\"\");\n    const [wanSubnetAddress, setwanSubnetAddress] = useState(\"\");\n    const [wanGatewayAddress, setwanGatewayAddress] = useState(\"\");\n    const [hasLoaded, sethasLoaded] = useState(\"\");\n\n  \n    const override = css`\n      margin-top:30%;\n      margin-left:60%\n    `;\n\n    function validateForm() {\n        return subscriberName.length > 0 && lanIpAddress.length > 0;\n      }\n\n    function apiRequest(){\n       axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n\n        axios({\n            method: 'POST',\n            url:'http://127.0.0.1:8000/token',\n            data:{\n                name: subscriberName,\n                lanIP: lanIpAddress,\n                lanSubnet: lanSubnetAddress,\n                wanIP: wanIpAddress,\n                wanSubnet: wanSubnetAddress,\n                wanGateway: wanGatewayAddress,\n                vlan_ID: vlanID\n\n            },\n            headers:{\n              Bearer: auth_token\n            }\n        }) .then(function(response){\n            if (response.status === 200){\n              \n            } else {\n                \n            }\n        })\n    }\n\n    function handleSubmit(event) {\n      sethasLoaded(\"loading\")\n      event.preventDefault();\n    }\n\n\n\n    return (\n        <div className='contentpage'>\n          {\n            hasLoaded === 'loading' ?\n            <RingLoader\n            css={override}\n            size={150}\n            color={\"#3678D7\"}\n            loading={true}\n          />\n          :<form onSubmit={handleSubmit}>\n              <p className=\"f3 fw6 ph0 mh0 pt4\">Create Subscriber</p>\n                <FormGroup controlId=\"subscriberName\">\n                  <FormLabel>Subscriber Name</FormLabel>\n                  <FormControl\n                    autoFocus\n                    type=\"text\"\n                    value={subscriberName}\n                    onChange={e => setsubscriberName(e.target.value)}\n                  />\n                </FormGroup>\n                <FormGroup controlId=\"vlanID\">\n                  <FormLabel>VLAN ID</FormLabel>\n                  <FormControl\n                    value={vlanID}\n                    onChange={e => setvlanID(e.target.value)}\n                    type=\"number\"\n                  />\n                </FormGroup>\n                <FormGroup controlId=\"lanIPAddress\">\n                  <FormLabel>LAN IP Address</FormLabel>\n                  <FormControl\n                    value={lanIpAddress}\n                    onChange={e => setlanIpAddress(e.target.value)}\n                    type=\"text\"\n                  />\n                </FormGroup>\n                <FormGroup controlId=\"lanSubnetAddress\">\n                  <FormLabel>LAN Subnet Address</FormLabel>\n                  <FormControl\n                    value={lanSubnetAddress}\n                    onChange={e => setlanSubnetAddress(e.target.value)}\n                    type=\"text\"\n                  />\n                </FormGroup>\n                <FormGroup controlId=\"wanIpAddress\">\n                  <FormLabel>WAN IP Address</FormLabel>\n                  <FormControl\n                    value={wanIpAddress}\n                    onChange={e => setwanIpAddress(e.target.value)}\n                    type=\"text\"\n                  />\n                </FormGroup>\n                <FormGroup controlId=\"wanSubnetAddress\">\n                  <FormLabel>WAN Subnet Address</FormLabel>\n                  <FormControl\n                    value={wanSubnetAddress}\n                    onChange={e => setwanSubnetAddress(e.target.value)}\n                    type=\"text\"\n                  />\n                </FormGroup>\n                <FormGroup controlId=\"wanGatewayAddress\">\n                  <FormLabel>WAN Gateway Address</FormLabel>\n                  <FormControl\n                    value={wanGatewayAddress}\n                    onChange={e => setwanGatewayAddress(e.target.value)}\n                    type=\"text\"\n                  />\n                </FormGroup>\n                <Button block disabled={!validateForm()} type=\"submit\">\n                  Create Subscriber\n                </Button>\n           </form>\n          }\n            \n        </div>\n    );\n};\nexport default CreateSubscriber;\n"]},"metadata":{},"sourceType":"module"}